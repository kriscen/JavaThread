Java线程基础知识
    一.synchronized代码块
        synchronized(表达式)
        表达式为获取锁的实例
        1.synchronized实例方法和代码块
            synchrnized实例方法是使用this的锁来执行线程的互斥处理
        2.synchronized静态方法和代码块
            静态方法使用类的类对象的锁来执行线程
    二.线程的协作
        1.等待队列
            所有实例都拥有一个等待队列，是在实例的wait方法执行后停止操作的线程队列。
            在执行wait方法后，线程会暂停操作，进入等待队列，除非发生下列情况，线程会退出等待队列
                a.有其他线程的notify方法唤醒线程
                b.有其他线程的notifyAll方法唤醒线程
                c.有其他线程的interrupt方法唤醒线程
                d.wait方法超时
        2.wait方法
            wait方法会让线程进入等待队列。如果要执行该方法，线程必须持有锁。线程如果进入等待队列，会释放其实例的锁。
        3.notify方法
            notify方法会将等待队列中的一个线程取出。如果要执行该方法，线程也必须要持有调用的实例的锁
        4.notifyAll方法
            notifyAll会将等待队列中的所有线程都取出。如果要执行该方法，线程也必须要持有调用的实例的锁。
            唤醒的线程退出了等待队列，都在等待获取锁，处于阻塞状态，只有执行notifyAll的线程释放锁以后才有一个可以运行。







